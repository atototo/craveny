version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:13-alpine
    container_name: craveny-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-craveny}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: craveny-redis
    ports:
      - "6380:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # etcd (Milvus 의존성)
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: craveny-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls=http://0.0.0.0:2379
    restart: unless-stopped

  # MinIO (Milvus 스토리지)
  minio:
    image: minio/minio:latest
    container_name: craveny-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Milvus (standalone mode)
  milvus:
    image: milvusdb/milvus:v2.3.0
    container_name: craveny-milvus
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3

  # FastAPI Backend (개발 중에는 주석 처리, 로컬에서 직접 실행)
  # backend:
  #   build:
  #     context: ..
  #     dockerfile: infrastructure/Dockerfile
  #   container_name: craveny-backend
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - ../.env
  #   volumes:
  #     - ../backend:/app/backend
  #     - ../data:/app/data
  #   depends_on:
  #     - postgres
  #     - milvus
  #     - redis
  #   command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
  #   restart: unless-stopped

volumes:
  postgres_data:
  milvus_data:
  etcd_data:
  minio_data:
